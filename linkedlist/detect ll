/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        
        
        
        
        
        ListNode* slow=head;
        ListNode* fast=head;
    
        if(fast==NULL)return false;
        if(slow->next==NULL)return false;
        if((slow->next)->next==fast)
        {
            
        return true;
            
            
            
            
            
            
            
        }
        
        if((slow->next)->next==NULL)return false;
        
        
        
        
        
        
        
        fast=(fast->next)->next;
        
        
        
        while(fast!=NULL && fast->next!=NULL)
        {
        
            
            
            if(slow==fast)return true;
            slow=slow->next;
            fast=(fast->next)->next;
            
            
            
        }
        
        return 0;
        
        
        
        
        
        
    }
};
