
class Solution{
public:
    int equalPartition(int N, int arr[])
    {long int sum=0; int j=0; 
    int c1,c2;
        long int i=0; // here bool array is taken because for a int array max size is 10^6 for a global array max size can be 10^8 here by 
        if(sum%2!=0)return 0;  //this is because i can't have two equal sum to be equal to an odd no.
        
        for(i=0;i<N;i++) //  constraitns it is greater then 10^6 so we take bool array. 
        {sum=sum+arr[i];
            
        } bool t[N+1][sum+1]; 
        sum=sum/2;
        
        
        for(i=0;i<=N;i++)
        {
            for(j=0;j<=sum;j++)
            {
                if(j==0)t[i][j]=1;
                else if(i==0)t[i][j]=0;
                else 
                {
                    if(arr[i-1]>j)t[i][j]=t[i-1][j];
                    else
                    {
                        c1=t[i-1][j-arr[i-1]];
                        c2=t[i-1][j];
                        t[i][j]=c1||c2;
                    }
                }
            }
        }
            
        
        return t[N][sum];
    }
};
