https://leetcode.com/problems/network-delay-time/submissions/
class Solution {
public:
    int networkDelayTime(vector<vector<int>>& times, int n, int k) {
        vector<pair<int,int>>v(n);
        vector<pair<int,int>>adj[n+1];
        int i;
        for(i=0;i<times.size();i++)
        {
            int first=times[i][0];
            int second=times[i][1];
            int third=times[i][2];
            adj[first].push_back({second,third});
            
        }
        vector<int>dist(n+1,INT_MAX-1);
        dist[0]=0;
        dist[k]=0;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;
        q.push({0,k});
        while(q.empty()==0)
        {
            pair<int,int>temp=q.top();
            q.pop();
            
            int distance=temp.first;
            int node=temp.second;
            for(auto x:adj[node])
            {  
                if(distance+x.second<dist[x.first])
                {
                    dist[x.first]=distance+x.second;
                    q.push({distance+x.second,x.first});
                }
                
            }
            
        }
        int ans=0;
        for(i=0;i<=n;i++)
        {
            ans=max(ans,dist[i]);
            if(ans==INT_MAX-1)return -1;
        }
        return ans;
    }
};
