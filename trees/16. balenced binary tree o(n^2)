/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 
 int height(TreeNode *A)
 { if(A==NULL)return 0;
 else
 return max((height(A->left) +1 ),(height(A->right)+1));
 
 }
int Solution::isBalanced(TreeNode* A) { 
    queue<TreeNode*>q; int diff;
    q.push(A);
    
    while(q.empty()==0)
    {
        A=q.front();
        q.pop();
        diff=height(A->left)-height(A->right);
        diff=abs(diff);
        if(diff>1)return 0;
        
        if(A->left)q.push(A->left);
        if(A->right)q.push(A->right);
    }
    return 1;
    
    
    
    
    
}
