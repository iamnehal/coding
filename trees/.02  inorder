https://leetcode.com/problems/binary-tree-inorder-traversal/submissions/
class Solution {
public:

void solve(vector<int> &v,TreeNode* root)
{
    if(!root)return;
    solve(v,root->left);
    v.push_back(root->val);
    solve(v,root->right);
    return ;
    
    
}

    vector<int> inorderTraversal(TreeNode* root) {
        
        vector<int>v;
        solve(v,root);
        return v;
        
    }
};
******************************
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
  
        stack<TreeNode*>s;
        vector<int>v;
              if(root==NULL)return v;
       // s.push(root);
        TreeNode* temp=root;
        while(s.empty()!=1 || temp!=NULL)
        {
            while(temp!=NULL)
            { s.push(temp);
               temp= temp->left;
            }
            
            if(s.empty()!=1)
            {
                temp=s.top();
                s.pop();
                v.push_back(temp->val);
                temp=temp->right;
                
                
            }
            
            
        }
        
        return v;
        
    }
};
