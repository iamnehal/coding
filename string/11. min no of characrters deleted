q:

soln1: int Solution::solve(string S) {
   string sr=S;
    reverse(sr.begin(),sr.end());
    int i,j;
    int m=S.length();
    int n=m;
    int dp[m+1][n+1];
    for(i=0;i<=m;i++)
    {
        for(j=0;j<=n;j++)
        {
            if(i==0||j==0)dp[i][j]=0;
            
        }
    }
    for(i=1;i<=m;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(S[i-1]==sr[j-1])dp[i][j]=1+dp[i-1][j-1];
        
            else
            dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            
            
        }
        
        
    }
    
    int common=dp[m][n];
    int ans=m-common;
    if(ans<=1)return 1;
    else return 0;
    
    
}




soln 2: 
