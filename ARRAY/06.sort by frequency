https://leetcode.com/problems/sort-array-by-increasing-frequency/submissions/


 bool comp(const pair<int,int > &a,const pair<int,int> &b)
    {
        if(a.second==b.second)
            return a.first>b.first;
        else return a.second<b.second;
    
    }

class Solution {
public:
    
   
    
    
    vector<int> frequencySort(vector<int>& nums) {
        unordered_map<int,int>m;
        for(int i=0;i<nums.size();i++)
            m[nums[i]]++;
         vector<pair<int,int>>ans;
        for(auto x:m)
            ans.push_back(x);
    
    sort(ans.begin(),ans.end(),comp);
        
       vector<int>v;
        for(int i=0;i<ans.size();i++)
        {
            
            for(  int j=0;j<ans[i].second;j++)
            
            v.push_back(ans[i].first);
        }
        return v;
        
        
        
    }
};
