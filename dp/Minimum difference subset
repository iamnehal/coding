Question link: https://www.interviewbit.com/problems/minimum-difference-subsets/




int Solution::solve(vector<int> &A) {
    
    
    int i,c1,c2;
    long long int j;
    int n=A.size();
    long long int sum=0;
    
    for(i=0;i<n;i++)sum+=A[i];
    int t[n+1][sum+1];
    
for(i=0;i<=n;i++)
{
    for(j=0;j<=sum;j++)
    {
        if(j==0)t[i][j]=1;
        else if(i==0)
        {t[i][j]=0;
            
        }
        else
        {
            if(A[i]>j)

{
    t[i][j]=t[i-1][j];
    
}   
else
            {
                c1=t[i-1][j];
                c2=t[i-1][j-A[i-1]];
                t[i][j]=c1||c2;
            }
        
        }
    
    }
}
int temp=0;
int tempmin=INT_MAX;

for(j=0;j<=sum;j++)
{
    if(t[n][j])
    {
        temp=sum-2*j;
        tempmin=min(tempmin,abs(temp));
    }
}
return tempmin;
    
}
