q. https://practice.geeksforgeeks.org/problems/delete-a-node-from-bst/1#


Node* findsucc(Node *root)
{ root=root->right;
    while(root!=NULL && root->left!=NULL)
    {
        root=root->left;
    }
    return root;
}

Node *deleteNode(Node *root,  int X)
{
    if(root==NULL)return root;
    
    //when root is null
    
    //when value is not found we transverse the bst where value can be found
    
    else if(root->data>X)
    {
    root->left = deleteNode(root->left, X);
    }
    else if(root->data <X)
    {  root->right = deleteNode(root->right, X); 
    }
    
    
    
    
    
    
    
    // when value is found 
    else 
    {
       /* if(root->right==NULL && root->left==NULL)
        { //lead node dono side null
            return NULL;
        }   
        */
        
        
        
         if(root->right==NULL)
        {
         
            Node* temp=root->left; //stored root left temprorary
           delete root;  //delete root to save space 
            
         return temp;   
            
        }
        
        else if(root->left==NULL)
        {
     Node* temp=root->right; //stored root right temprorary
          delete root;  //delete root to save space 
            
         return temp;   
        }
        
        else //when both side nodes are present 
        {
            //Note deletion in BST is vague topic and there no lies about 
            //which element should come there 
            Node* succ=findsucc(root);
            root->data=succ->data;
            root->right=deleteNode(root->right,succ->data);
        
            
        } 
        return root;
}
       
        
        
    }  
