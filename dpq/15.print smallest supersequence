q : https://leetcode.com/problems/shortest-common-supersequence/submissions/
soln:
class Solution {
public:
    string shortestCommonSupersequence(string s1, string s2) {
        
        int m=s1.length();
        int n=s2.length();
        int dp[m+1][n+1];
        int i,j;
        for(i=0;i<=m;i++)
        {
            for(j=0;j<=n;j++)
            {
                if(i==0||j==0)dp[i][j]=0;
            }
        }
        for(i=1;i<=m;i++)

            {
                for(j=1;j<=n;j++)
                {
                    if(s1[i-1]==s2[j-1])
                        dp[i][j]=1+dp[i-1][j-1];
                    else
                        dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                    
                }
            }
            
            i=m;j=n;
        string ans="";
        while(i>0 && j>0)
        { if( s1[i-1]==s2[j-1])
        {
            ans=ans+s1[i-1];
            i--;j--;
        }
         else
         {
             if(dp[i-1][j]>dp[i][j-1])
             {
                 ans=ans+s1[i-1];
                 
                 i--;
             }
             else
             {
                 ans=ans+s2[j-1];
                 j--;
             }
                 
             
         }
            
        }
        
        while(i>0)
        {
            ans=ans+s1[i-1];
            i--;
        }
        while(j>0)
        {
            ans=ans+s2[j-1];j--;
        }
        reverse(ans.begin(),ans.end());
        return ans;
            
    }
};
