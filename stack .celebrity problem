// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function template for C++

class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        
        stack<int>s;
        for(int i=0;i<n;i++)s.push(i);
        while(s.size()>1)
        {
            
            int x=s.top();
            s.pop();
            int y=s.top();
            s.pop();
            
if( M[x][y]==1 && M[y][x]!=1 )        
        s.push(y);
     else if ( M[x][y]!=1 && M[y][x]==1 )   
            s.push(x);
            
            
            
            
        }
        if(s.size()==0)return -1;
    
    int c=s.top();
    s.pop();
    for(int i=0;i<n;i++)
    {
        if(i!=c)
        {
            if(M[i][c]==0||M[c][i]==1)return -1;
            
            
        }
        
        
    }
    return c;
        
        
        
        
        
        
        
    }
};

// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}
  // } Driver Code Ends
